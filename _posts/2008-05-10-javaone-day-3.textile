---
layout: post
title: JavaOne Day 3
categories:
- JavaOne08
tags: []
status: publish
type: post
published: true
---
Another very full-on day at JavaOne, but no labs today.  I had had enough of Ajax for a while, although I will definitely keeping an eye on jMaki (especially after they gave me a tshirt and talking to the lead developer over a coffee on morning!)

This morning the General Session was hosted by Intel.  The big announcement was that the developers of Sun and Intel have been working together to try and optimize the jdk running on Intel x86 processors.  Well it seems that they have done pretty well with a 69% performance increase!! This really blew us away as most optimizations come in the form of single digits.  Im sure its not that high in real world, but a huge leap forward nonetheless.

The first session of the day was comparison of the Swing/SWT builders within Netbeans and Eclipse.  This was interesting to me (and Vipul) because our little tv renaming app is SWT based.  Not that we are going to re-write it in Eclipse RCP now, but it was nice to see what can be done with drag and drop (as good as .NET now!).  Then there was Java in real life, a robotic car that was created by a university for the DARPA Urban Challenge.  This car can be seen here.  It is a completely autonomous car that had to drive from one end of a city to the other performing normal maneuvers along the way such as passing, ad giving way and parking. It was all running Java too ... very impressive!

I then went to a quick session about how to used dTrace on OpenSolaris to see what is going on inside the VM and the system in general and find performance issues and memory leaks.  It sounded all well and good but I'm sure it is much harder then they made it out to be.  And no-one actually runs OpenSolaris.  Speaking of which, the photo of me in the OpenSolaris t-shirt does not in any way, shape or form mean that I support it .... just means they were giving out free stuff!!!  I have about geeky 6 tshirts now)

Then an interesting discussion about how to use the Java Persistence API when not using a web container (and therefore inherent transaction management) in Swing based apps with many clients.  Raised some interesting points that I hadn't really thought about before.  Next was another deep and meaningful look at design patterns and how some of them really aren't as good as they are made out to be, but did offer some solutions.

A party was held that night in the Yerba Beuna Gardens, behind the Moscone Center.  There was some food on offer but the main event was Smash Mouth playing a private set for us.  they didn't have much stage presence (it probably didn't help it was like -10 degrees) but they made the place rock with the classics of All Star and Walkin On The Sun.
